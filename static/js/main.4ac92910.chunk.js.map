{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","_useState","useState","_useState2","Object","slicedToArray","items","setItems","_useState3","_useState4","inputValue","setInputValue","_useState5","_useState6","lists","setLists","_useState7","_useState8","listValue","setListValue","_useState9","_useState10","boards","setBoards","_useState11","_useState12","boardValue","setBoardValue","reactBoardsArray","map","data","react_default","a","createElement","class","onClick","handleAddList","value","id","onChange","event","target","className","placeholder","style","width","handleAddButtonClick","item","index","itemName","key","handleRight","handleDelete","reactListArray","newItem","quantity","isSelected","newItems","concat","toConsumableArray","newList","newLists","itemIndex","updatedItems","splice","_useState13","_useState14","nextSprints","setNextSprint","_useState15","_useState16","_useState17","_useState18","_useState19","_useState20","_useState21","_useState22","_useState23","_useState24","_useState25","_useState26","_useState27","_useState28","_useState29","_useState30","_useState31","_useState32","newSprint","newBoard","newBoards","handleAddBoard","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.4ac92910.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './index.css';\r\n\r\n\r\nconst App = () => {\r\n\t// HINT: each \"item\" in our list names a name,\r\n\t// a boolean to tell if its been completed, and a quantity\r\n    const [items, setItems] = useState([]);\r\n    const [inputValue, setInputValue] = useState('');\r\n\tconst [lists, setLists] = useState([]);\r\n    const [listValue, setListValue] = useState('');\r\n    const [boards, setBoards] = useState([]);\r\n    const [boardValue, setBoardValue] = useState('');\r\n\r\n    const reactBoardsArray = boards.map((data) => {\r\n        return (\r\n            <div class=\"card\">\r\n                 <div class=\"col-sm-2\">\r\n                    <div class=\"card\">\r\n                        <div class=\"card-body\">\r\n                            <a class=\"btn btn-primary\" onClick={() => handleAddList()} >Add List</a>\r\n                            <input value={listValue} id={listValue} onChange={(event) => setListValue(event.target.value)} className='add-item-input flex' placeholder='Name List' style={{ width: '3cm' }} />\r\n                            <h5 class=\"card-title\">{listValue}</h5>\r\n                            <p class=\"card-text\">\r\n                                <div className='add-item-box flex'>\r\n                                    <input value={inputValue} onChange={(event) => setInputValue(event.target.value)} className='add-item-input flex' placeholder='Add a task...' style={{ width: '3cm' }} />\r\n                                    <a class=\"btn btn-primary\" onClick={() => handleAddButtonClick()}>Add Task</a>\r\n                                </div>\r\n                                <div className='item-list'>\r\n                                    {items.map((item, index) => (\r\n\r\n\r\n                                        <div className='item-container'>\r\n                                            <div className='item-name' >\r\n\r\n\r\n\r\n                                                <strong><span>{item.itemName}</span></strong>\r\n\r\n\r\n                                                <button key={index} className=\"item\" onClick={() => handleRight(index)} class=\" btn btn-outline-secondary btn-sm\"> â†’ </button>\r\n\r\n                                                <block>\r\n                                                    <button key={index} className=\"item\" onClick={() => handleDelete(index)} class=\" btn btn-outline-secondary btn-sm\"> Delete Task </button>\r\n                                                </block>\r\n\r\n                                            </div>\r\n\r\n\r\n\r\n\r\n\r\n                                        </div>\r\n                                    ))}\r\n                                </div>\r\n\r\n\r\n                            </p>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div>{reactListArray}</div>\r\n                </div>\r\n\r\n                );\r\n    });\r\n\r\n\tconst reactListArray = lists.map((data) => {\r\n\t\treturn (\r\n\t\t\t<div className='main-container'>\r\n                <div class=\"col-sm-2\">\r\n                    <div class=\"card\">\r\n                        <div class=\"card-body\">\r\n                            <a class=\"btn btn-primary\" onClick={() => handleAddList()} >Add List</a>\r\n                            <input value={listValue} id={listValue} onChange={(event) => setListValue(event.target.value)} className='add-item-input flex' placeholder='Name List' style={{ width: '3cm' }} />\r\n                            <h5 class=\"card-title\">{listValue}</h5>\r\n                            <p class=\"card-text\">\r\n                                <div className='add-item-box flex'>\r\n                                    <input value={inputValue} onChange={(event) => setInputValue(event.target.value)} className='add-item-input flex' placeholder='Add a task...' style={{ width: '3cm' }} />\r\n                                    <a class=\"btn btn-primary\" onClick={() => handleAddButtonClick()}>Add Task</a>\r\n                                </div>\r\n                                <div className='item-list'>\r\n                                    {items.map((item, index) => (\r\n\r\n\r\n                                        <div className='item-container'>\r\n                                            <div className='item-name' >\r\n\r\n\r\n\r\n                                                <strong><span>{item.itemName}</span></strong>\r\n\r\n\r\n                                                <button key={index} className=\"item\" onClick={() => handleRight(index)} class=\" btn btn-outline-secondary btn-sm\"> â†’ </button>\r\n\r\n                                                <block>\r\n                                                    <button key={index} className=\"item\" onClick={() => handleDelete(index)} class=\" btn btn-outline-secondary btn-sm\"> Delete Task </button>\r\n                                                </block>\r\n\r\n                                            </div>\r\n\r\n\r\n\r\n\r\n\r\n                                        </div>\r\n                                    ))}\r\n                                </div>\r\n\r\n\r\n                            </p>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t});\r\n\r\n\r\n\tconst handleAddButtonClick = () => {\r\n\t\tconst newItem = {\r\n\t\t\titemName: inputValue,\r\n\t\t\tquantity: 1,\r\n\t\t\tisSelected: false,\r\n\t\t};\r\n\r\n\t\tconst newItems = [...items, newItem];\r\n\r\n\t\tsetItems(newItems);\r\n\t\tsetInputValue('');\r\n\t\t\r\n\t};\r\n\tconst handleAddList = () => {\r\n\t\tconst newList = {\r\n\t\t\titemName: listValue,\r\n\t\t\tquantity: 1,\r\n\t\t\tisSelected: false,\r\n\t\t};\r\n\r\n\t\tconst newLists = [...lists, newList];\r\n\r\n\t\tsetLists(newLists);\r\n\t\tsetListValue('');\r\n    };\r\n\r\n    const handleAddBoard = () => {\r\n        const newBoard = {\r\n            itemName: boardValue,\r\n            quantity: 1,\r\n            isSelected: false,\r\n        };\r\n\r\n        const newBoards = [...boards, newBoard];\r\n\r\n        setBoards(newBoards);\r\n        setBoardValue('');\r\n    };\r\n\r\n    const handleDelete = (itemIndex) => {\r\n\r\n        let updatedItems = [...items];\r\n        updatedItems.splice(itemIndex, 1);\r\n        setItems(updatedItems);\r\n\r\n    }\r\n\r\n    const handleDeleteSprint = (itemIndex) => {\r\n\r\n        let updatedItems = [...nextSprints];\r\n        updatedItems.splice(itemIndex, 1);\r\n        setNextSprint(updatedItems);\r\n\r\n    }\r\n\r\n    const handleDeleteDev = (itemIndex) => {\r\n\r\n        let updatedItems = [...nextDevs];\r\n        updatedItems.splice(itemIndex, 1);\r\n        setDev(updatedItems);\r\n\r\n    }\r\n\r\n    const handleDeleteTest = (itemIndex) => {\r\n\r\n        let updatedItems = [...nextTests];\r\n        updatedItems.splice(itemIndex, 1);\r\n        setTest(updatedItems);\r\n\r\n    }\r\n\r\n    const handleDeleteReview = (itemIndex) => {\r\n\r\n        let updatedItems = [...nextReviews];\r\n        updatedItems.splice(itemIndex, 1);\r\n        setReview(updatedItems);\r\n\r\n    }\r\n\r\n    const handleDeleteDone = (itemIndex) => {\r\n\r\n        let updatedItems = [...nextDone];\r\n        updatedItems.splice(itemIndex, 1);\r\n        setNextSprint(updatedItems);\r\n\r\n    }\r\n\r\n    const [nextSprints, setNextSprint] = useState([]);\r\n    const [sprintValue, setSprintValue] = useState('');\r\n    const handleSprintButtonClick = () => {\r\n        const newSprint = {\r\n            itemName: sprintValue,\r\n            quantity: 1,\r\n            isSelected: false,\r\n        };\r\n\r\n        const newItems = [...nextSprints, newSprint];\r\n\r\n        setNextSprint(newItems);\r\n        setSprintValue('');\r\n\r\n    };\r\n\r\n    const [nextDevs, setDev] = useState([]);\r\n    const [devValue, setDevValue] = useState('');\r\n    const handleDevButtonClick = () => {\r\n        const newDev = {\r\n            itemName: devValue,\r\n            quantity: 1,\r\n            isSelected: false,\r\n        };\r\n\r\n        const newItems = [...nextDevs, newDev];\r\n\r\n        setDev(newItems);\r\n        setDevValue('');\r\n\r\n    };\r\n\r\n    const [nextTests, setTest] = useState([]);\r\n    const [testValue, setTestValue] = useState('');\r\n    const handleTestButtonClick = () => {\r\n        const newTest = {\r\n            itemName: testValue,\r\n            quantity: 1,\r\n            isSelected: false,\r\n        };\r\n\r\n        const newItems = [...nextTests, newTest];\r\n\r\n        setTest(newItems);\r\n        setTestValue('');\r\n\r\n    };\r\n\r\n\r\n    const [nextReviews, setReview] = useState([]);\r\n    const [reviewValue, setReviewValue] = useState('');\r\n    const handleReviewButtonClick = () => {\r\n        const newReview = {\r\n            itemName: reviewValue,\r\n            quantity: 1,\r\n            isSelected: false,\r\n        };\r\n\r\n        const newItems = [...nextReviews, newReview];\r\n\r\n        setReview(newItems);\r\n        setReviewValue('');\r\n\r\n    };\r\n\r\n    const [nextDone, setDone] = useState([]);\r\n    const [doneValue, setDoneValue] = useState('');\r\n    const handleDoneButtonClick = () => {\r\n        const newDone = {\r\n            itemName: doneValue,\r\n\r\n        };\r\n\r\n        const newItems = [...nextDone, newDone];\r\n\r\n        setDone(newItems);\r\n        setDoneValue('');\r\n\r\n    };\r\n\r\n    const handleRight = (itemIndex) => {\r\n\r\n        const newSprint = items[itemIndex];\r\n\r\n        const newItems = [...nextSprints, newSprint];\r\n\r\n        setNextSprint(newItems);\r\n\r\n        let updatedItems = [...items];\r\n        updatedItems.splice(itemIndex, 1);\r\n        setItems(updatedItems);\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\treturn (\r\n\t\t<div className='app-background'>\r\n\r\n\r\n\t\t\t\r\n\r\n\t\t\t<row>\r\n\r\n                <a class=\"btn btn-primary\" onClick={() => handleAddBoard()} >Add Board</a>\r\n\t\t\t\t\r\n\t\t\t\t\t \r\n              \r\n                \r\n\t\t\t    \r\n\r\n\t\t\t\t<div>{reactBoardsArray}</div>\r\n\r\n\t\t\t\t</row>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\n\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n        <App />\n  </React.StrictMode>\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}