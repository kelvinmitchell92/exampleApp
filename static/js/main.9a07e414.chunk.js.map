{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","_useState","useState","_useState2","Object","slicedToArray","items","setItems","_useState3","_useState4","_useState5","_useState6","lists","setLists","reactListArray","map","data","react_default","a","createElement","className","value","inputValue","onChange","event","setInputValue","target","placeholder","onClick","handleAddButtonClick","item","index","toggleComplete","isSelected","Fragment","itemName","handleQuantityDecrease","quantity","handleQuantityIncrease","totalItemCount","_useState7","_useState8","_useState9","_useState10","setTotalItemCount","_useState11","_useState12","_useState13","_useState14","_useState15","_useState16","listValue","setListValue","newItem","newItems","concat","toConsumableArray","calculateTotal","reduce","total","newList","newLists","handleAddList","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.9a07e414.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './index.css';\r\n\r\n\r\nconst App = () => {\r\n\t// HINT: each \"item\" in our list names a name,\r\n\t// a boolean to tell if its been completed, and a quantity\r\n\tconst [items, setItems] = useState([\r\n\t]);\r\n\tconst [items1, setItems1] = useState([\r\n\t]);\r\n\tconst [lists, setLists] = useState([]);\r\n\r\n\tconst reactListArray = lists.map((data) => {\r\n\t\treturn (\r\n\t\t\t<div className='main-container'>\r\n\t\t\t\t<div className='add-item-box'>\r\n\t\t\t\t\t<input value={inputValue} onChange={(event) => setInputValue(event.target.value)} className='add-item-input' placeholder='Add an item...' />\r\n\t\t\t\t\t<button onClick={() => handleAddButtonClick()}> </button>\r\n\t\t\t\t</div>\r\n\t\t\t\t{lists.map((item, index) => (\r\n\t\t\t\t\t<div className='item-list'>\r\n\t\t\t\t\t\t{items.map((item, index) => (\r\n\t\t\t\t\t\t\t<div className='item-container'>\r\n\t\t\t\t\t\t\t\t<div className='item-name' onClick={() => toggleComplete(index)}>\r\n\t\t\t\t\t\t\t\t\t{item.isSelected ? (\r\n\t\t\t\t\t\t\t\t\t\t<>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<span className='completed'>{item.itemName}</span>\r\n\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t<>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<span>{item.itemName}</span>\r\n\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='quantity'>\r\n\t\t\t\t\t\t\t\t\t<button onClick={() => handleQuantityDecrease(index)}>\r\n\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t<span> {item.quantity} </span>\r\n\t\t\t\t\t\t\t\t\t<button onClick={() => handleQuantityIncrease(index)}>\r\n\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t))}\r\n\t\t\t\t<div className='total'>Total: {totalItemCount}</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t});\r\n\r\n\tconst [inputValue, setInputValue] = useState('');\r\n\tconst [totalItemCount, setTotalItemCount] = useState(0);\r\n\r\n\tconst [inputValue1, setInputValue1] = useState('');\r\n\tconst [totalItemCount1, setTotalItemCount1] = useState(0);\r\n\r\n\tconst [listValue, setListValue] = useState('');\r\n\r\n\tconst handleAddButtonClick = () => {\r\n\t\tconst newItem = {\r\n\t\t\titemName: inputValue,\r\n\t\t\tquantity: 1,\r\n\t\t\tisSelected: false,\r\n\t\t};\r\n\r\n\t\tconst newItems = [...items, newItem];\r\n\r\n\t\tsetItems(newItems);\r\n\t\tsetInputValue('');\r\n\t\tcalculateTotal();\r\n\t};\r\n\tconst handleAddList = () => {\r\n\t\tconst newList = {\r\n\t\t\titemName: listValue,\r\n\t\t\tquantity: 1,\r\n\t\t\tisSelected: false,\r\n\t\t};\r\n\r\n\t\tconst newLists = [...lists, newList];\r\n\r\n\t\tsetLists(newLists);\r\n\t\tsetListValue('');\r\n\t};\r\n\tconst handleAddButtonClick1 = () => {\r\n\t\tconst newItem1 = {\r\n\t\t\titemName: inputValue1,\r\n\t\t\tquantity: 1,\r\n\t\t\tisSelected: false,\r\n\t\t};\r\n\r\n\t\tconst newItems1 = [...items1, newItem1];\r\n\r\n\t\tsetItems1(newItems1);\r\n\t\tsetInputValue('');\r\n\t\tcalculateTotal();\r\n\t};\r\n\r\n\r\n\tconst handleQuantityIncrease = (index) => {\r\n\t\tconst newItems = [...items];\r\n\r\n\t\tnewItems[index].quantity++;\r\n\r\n\t\tsetItems(newItems);\r\n\t\tcalculateTotal();\r\n\t};\r\n\r\n\tconst handleQuantityDecrease = (index) => {\r\n\t\tconst newItems = [...items];\r\n\r\n\t\tnewItems[index].quantity--;\r\n\r\n\t\tsetItems(newItems);\r\n\t\tcalculateTotal();\r\n\t};\r\n\r\n\tconst toggleComplete = (index) => {\r\n\t\tconst newItems = [...items];\r\n\r\n\t\tnewItems[index].isSelected = !newItems[index].isSelected;\r\n\r\n\t\tsetItems(newItems);\r\n\t};\r\n\r\n\tconst calculateTotal = () => {\r\n\t\tconst totalItemCount = items.reduce((total, item) => {\r\n\t\t\treturn total + item.quantity;\r\n\t\t}, 0);\r\n\r\n\t\tsetTotalItemCount(totalItemCount);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className='app-background'>\r\n\r\n\r\n\t\t\t\r\n\r\n\r\n\r\n\t\t\t<div className='add-item-box'>\r\n\t\t\t\t<input value={listValue} onChange={(event) => setListValue(event.target.value)} className='add-item-input' placeholder='Add a list...' />\r\n\t\t\t\t<button onClick={() => handleAddList()}> </button>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div>{reactListArray}</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\n\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n        <App />\n  </React.StrictMode>\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}